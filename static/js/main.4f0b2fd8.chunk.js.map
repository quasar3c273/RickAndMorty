{"version":3,"sources":["components/modal.jsx","components/person.jsx","components/personsList.jsx","components/input.jsx","components/select.jsx","components/filter.jsx","components/header.jsx","components/spinner.jsx","components/errors/404.jsx","components/footer.jsx","components/pagination.jsx","components/app.jsx","get-personal-info/getData.js","index.js"],"names":["ModalCharacter","props","Modal","size","centered","Header","closeButton","Title","id","name","Body","className","src","image","alt","origin","gender","status","species","type","location","Footer","Button","onClick","onHide","Person","url","width","height","useState","modalShow","setModalShow","event","preventDefault","href","show","defaultProps","PersonsList","characters","map","character","Input","text","onFilterChange","label","toUpperCase","substring","htmlFor","onChange","target","value","Select","defaultValue","containerClass","values","Filter","filters","Spinner","role","Error","hasError","children","totalPages","pages","Pagination","onPageChange","currentPage","infoAboutPages","isLoading","pagesCount","undefined","pagesCards","_","range","length","pagesCardsCopy","slice","filter","x","includes","page","default","getPersonalInfo","getFiltersUrl","filterAddress","getFiltersCharacter","a","filterUrl","getResource","fetch","api","res","ok","error","json","this","App","setCurrentPage","data","setData","setError","spinner","setSpinner","setFilters","useEffect","then","catch","console","key","results","info","pageSize","pageIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f0b2fd8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst ModalCharacter = (props) => {\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Info about {props.name}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"d-flex justify-content-center align-items-center\">\n                    <img src={props.image} alt={props.name} />\n                    <div className=\"mx-3\">\n                        <h2>\n                            <b>{props.name}</b>\n                        </h2>\n                        <h4>Origin name: {props.origin.name}</h4>\n                        <p>Gender: {props.gender}</p>\n                        <p>Status: {props.status}</p>\n                        <p>Species: {props.species}</p>\n                        <p>Type: {props.type}</p>\n                        <p>Last known location: {props.location.name}</p>\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default ModalCharacter;\n","import React, { useState } from \"react\";\nimport ModalCharacter from \"./modal\";\n\nconst Person = ({\n    image,\n    url,\n    name,\n    width,\n    height,\n    status,\n    species,\n    gender,\n    type,\n    origin,\n    location\n}) => {\n    const [modalShow, setModalShow] = useState(false);\n\n    const onClick = (event) => {\n        event.preventDefault();\n        setModalShow(true);\n    };\n\n    if (!image) {\n        image = `https://via.placeholder.com/${width}x${height}`;\n    }\n\n    return (\n        <>\n            <div className=\"col-lg-3 col-md-6 col-xs-6 mb-3\">\n                <a\n                    onClick={onClick}\n                    href={url}\n                    className=\"text-white bg-dark d-flex flex-column text-decoration-none\"\n                >\n                    <img\n                        className=\"character-item__img card-img-bottom\"\n                        src={image}\n                        alt={name}\n                        width={width}\n                        height={height}\n                    />\n                    <div className=\"p-3\">\n                        <h5 className=\"overflow-hidden text-nowrap\">{name}</h5>\n                    </div>\n                </a>\n            </div>\n            <ModalCharacter\n                image={image}\n                name={name}\n                show={modalShow}\n                status={status}\n                species={species}\n                gender={gender}\n                type={type}\n                origin={origin}\n                location={location}\n                onHide={() => setModalShow(false)}\n            />\n        </>\n    );\n};\n\nPerson.defaultProps = {\n    image: \"https://via.placeholder.com/150\"\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./person\";\n\nconst PersonsList = ({ characters = [] }) => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                {characters.map((character) => (\n                    <Person key={character.id} {...character} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default PersonsList;\n","import React from \"react\";\n\nconst ZERO = 0;\nconst ONE = 1;\n\nconst Input = ({ name, text, onFilterChange, ...props }) => {\n    const label = name[ZERO].toUpperCase() + name.substring(ONE);\n    const onChange = (event) => onFilterChange(name, event.target.value);\n\n    return (\n        <div className=\"mx-2 flex-grow-1 flex-shrink-1\">\n            <label className=\"form-label\" htmlFor={name}>\n                {label}:\n            </label>\n            <input\n                onChange={onChange}\n                name={name}\n                id={name}\n                className=\"form-control\"\n                {...props}\n            />\n            {text && (\n                <div id=\"emailHelp\" className=\"form-text\">\n                    {text}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst ZERO = 0;\nconst ONE = 1;\n\nconst Select = ({\n    name,\n    className,\n    containerClass,\n    defaultValue,\n    values,\n    label,\n    text,\n    onFilterChange,\n    ...props\n}) => {\n    const onChange = (event) => onFilterChange(name, event.target.value);\n\n    return (\n        <div className=\"mx-2 flex-grow-1 flex-shrink-1\">\n            {label && (\n                <label className=\"form-label\" htmlFor={name}>\n                    {label}\n                </label>\n            )}\n            <select\n                name={name}\n                id={name}\n                className=\"form-select\"\n                onChange={onChange}\n                defaultValue={defaultValue}\n                aria-label={`Select for ${name}`}\n                {...props}\n            >\n                <option value=\"\">{`Select for ${name}`}</option>\n                {values.map((value) => (\n                    <option key={value} value={value}>\n                        {value[ZERO].toUpperCase() + value.substring(ONE)}\n                    </option>\n                ))}\n            </select>\n            {text && <div className=\"form-text\">{text}</div>}\n        </div>\n    );\n};\n\nexport default Select;\n","import React from \"react\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nconst Filter = ({ filters, onFilterChange }) => {\n    return (\n        <div className=\"filter container mb-5 text-white\">\n            <div className=\"d-flex flex-wrap justify-content-center mr-1\">\n                <Input\n                    value={filters.name}\n                    name=\"name\"\n                    onFilterChange={onFilterChange}\n                    type=\"text\"\n                />\n                <Select\n                    label=\"Gender:\"\n                    name=\"gender\"\n                    onFilterChange={onFilterChange}\n                    values={[\"female\", \"male\", \"genderless\", \"unknown\"]}\n                />\n                <Select\n                    label=\"Choose status:\"\n                    name=\"status\"\n                    onFilterChange={onFilterChange}\n                    values={[\"alive\", \"dead\", \"unknown\"]}\n                />\n                <Input\n                    value={filters.species}\n                    label=\"Race:\"\n                    name=\"species\"\n                    onFilterChange={onFilterChange}\n                    type=\"text\"\n                />\n                <Input\n                    value={filters.type}\n                    label=\"Type:\"\n                    name=\"type\"\n                    onFilterChange={onFilterChange}\n                    type=\"text\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport Filter from \"./filter\";\n\nconst Header = ({ onFilterChange, filters }) => {\n    return (\n        <header className=\"bg-dark mb-5\">\n            <div className=\"container navbar navbar-dark bg-dark\">\n                <div className=\"container\">\n                    <h3 className=\"text-white\">Rick and Morty API</h3>\n                </div>\n                <Filter onFilterChange={onFilterChange} filters={filters} />\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Spinner = () => {\n    return (\n        <div className=\"d-flex justify-content-center align-items-center\">\n            <div className=\"spinner-grow text-dark\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport Spinner from \"../spinner\";\nimport \"../errors/404.css\";\n\nconst Error = ({ hasError, children }) => {\n    if (hasError === 404) {\n        return (\n            <>\n                <div className=\"background-img\">\n                    <div className=\"space\"></div>\n                    <div className=\"wrapper\">\n                        <div className=\"img-wrapper\">\n                            <span>44</span>\n                        </div>\n                        <p>\n                            The page you are trying to search has been moved to\n                            another universe.\n                        </p>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n    if (hasError) {\n        return <Spinner />;\n    }\n    return children;\n};\n\nexport default Error;\n","import React from \"react\";\n\nconst Footer = ({ totalPages }) => {\n    return (\n        <footer className=\"mt-auto bg-dark text-white-50 py-5\">\n            <div className=\"container text-center\">\n                {totalPages ? <p>Total Pages: {totalPages.pages}</p> : <></>}\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport Spinner from \"./spinner\";\n\nconst Pagination = ({\n    onPageChange,\n    currentPage,\n    infoAboutPages = {},\n    isLoading\n}) => {\n    if (isLoading) {\n        return <Spinner />;\n    }\n\n    const pagesCount =\n        infoAboutPages.pages === undefined ? 1 : infoAboutPages.pages;\n    let pagesCards = _.range(1, pagesCount + 1);\n\n    if (pagesCards.length > 15) {\n        let pagesCardsCopy = pagesCards.slice(15);\n        pagesCards = pagesCards.filter((x) => !pagesCardsCopy.includes(x));\n    }\n\n    if (pagesCount === 1) return null;\n    return (\n        <>\n            <nav>\n                <ul className=\"pagination\">\n                    {currentPage !== 1 ? (\n                        <li className=\"page-item\">\n                            <button\n                                className=\"page-link\"\n                                onClick={() => {\n                                    onPageChange(currentPage - 1);\n                                }}\n                            >\n                                Prev\n                            </button>\n                        </li>\n                    ) : (\n                        <></>\n                    )}\n                    {pagesCards.map((page) => (\n                        <li\n                            className={\n                                \"page-item\" +\n                                (page === currentPage ? \" active\" : \"\")\n                            }\n                            key={page}\n                        >\n                            <button\n                                className=\"page-link\"\n                                onClick={() => {\n                                    onPageChange(page);\n                                }}\n                            >\n                                {page}\n                            </button>\n                        </li>\n                    ))}\n                    {currentPage !== pagesCount ? (\n                        <li className=\"page-item\">\n                            <button\n                                className=\"page-link\"\n                                onClick={() => {\n                                    onPageChange(currentPage + 1);\n                                }}\n                            >\n                                Next\n                            </button>\n                        </li>\n                    ) : (\n                        <></>\n                    )}\n                </ul>\n            </nav>\n\n            <nav>\n                <ul className=\"pagination\">\n                    <li className=\"page-item active\">\n                        <button className=\"page-link\">\n                            Current page: {currentPage}\n                        </button>\n                    </li>\n                </ul>\n            </nav>\n        </>\n    );\n};\n\nPagination.default = {\n    infoAboutPages: {}\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\nimport PersonsList from \"./personsList\";\nimport Header from \"./header\";\nimport Error from \"./errors/404\";\nimport Footer from \"./footer\";\nimport Pagination from \"./pagination\";\n\nimport GetData from \"../get-personal-info/getData\";\n\nconst getPersonalInfo = new GetData();\n\nfunction App() {\n    const pageSize = 20;\n    const [currentPage, setCurrentPage] = useState(1);\n    const [data, setData] = useState({});\n    const [error, setError] = useState(\"\");\n    const [spinner, setSpinner] = useState(true);\n    const [filters, setFilters] = useState({\n        name: \"\",\n        status: \"\",\n        species: \"\",\n        type: \"\",\n        gender: \"\"\n    });\n\n    const onFilterChange = (key, value) => {\n        setCurrentPage(1);\n        setFilters({ ...filters, [key]: value });\n    };\n\n    useEffect(() => {\n        setSpinner(true);\n        getPersonalInfo\n            .getFiltersCharacter(filters, currentPage)\n            .then((data) => {\n                setData(data);\n                setSpinner(false);\n                setError(\"\");\n            })\n            .catch((error) => {\n                console.error(error);\n                setData({});\n                setError(error.status);\n            });\n    }, [filters, currentPage]);\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n\n    return (\n        <div className=\"d-flex flex-column min-vh-100\">\n            <Header onFilterChange={onFilterChange} filters={filters} />\n            <main className=\"d-flex flex-column align-items-center\">\n                <Error hasError={error} isLoading={spinner}>\n                    <PersonsList characters={data.results} />\n                    <Pagination\n                        infoAboutPages={data.info}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={handlePageChange}\n                        isLoading={spinner}\n                    />\n                </Error>\n            </main>\n            <Footer totalPages={data.info} />\n        </div>\n    );\n}\n\nexport default App;\n","export default class GetData {\n    constructor() {\n        this.api = \"https://rickandmortyapi.com/api\";\n    }\n\n    getFiltersUrl = (filters = {}) => {\n        let filterAddress = \"\";\n        for (const filter in filters) {\n            if (filters.filter !== \"\")\n                filterAddress += `&${filter}=${filters[filter]}`;\n        }\n        return filterAddress;\n    };\n\n    getFiltersCharacter = async (filters = {}, currentPage = 1) => {\n        const filterUrl = this.getFiltersUrl(filters);\n        return await this.getResource(\n            `/character/?page=${currentPage}${filterUrl}`\n        );\n    };\n\n    getResource = async (url) => {\n        const res = await fetch(`${this.api}${url}`);\n\n        if (!res.ok) {\n            let error = new Error(\n                `Could not fetch ${url}, received ${res.status}`\n            );\n            error.status = res.status;\n            throw error;\n        }\n        return await res.json();\n    };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}